# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms

def get_fibonacci_numbers_up_to(max_number)
	fib_nums = [1, 2]
	current_num = 0

	while current_num < max_number
		current_num = fib_nums[-1] + fib_nums[-2]
		fib_nums << current_num unless current_num > max_number
	end 
	
	return fib_nums
end

def add_even_values(max_number)
	fib_nums = get_fibonacci_numbers_up_to(max_number)
	return fib_nums.select(&:even?).inject(&:+)
end